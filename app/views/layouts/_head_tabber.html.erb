<%

# BioCatalogue: app/views/layouts/_head_tabber.html.erb
#
# Copyright (c) 2008, University of Manchester, The European Bioinformatics 
# Institute (EMBL-EBI) and the University of Southampton.
# See license.txt for details

%>

<%# 
	# The following code does helps in remembering which tab the user was in after redirects etc.
	# It is based on code from the tabber website (http://www.barelyfitz.com/projects/tabber/).
%>

<script type="text/javascript">

/*==================================================
  Set the tabber options (must do this before including tabber.js)
  ==================================================*/
var tabberOptions = {

  'cookie':"tabber", /* Name to use for the cookie */

  'onLoad': function(argsObj)
  {
    // Only use cookie if anchor has not been explicitly specified in the URL 
		// AND the use_tabs_cookie variable is set to true.
		
		var useCookie = <%= get_and_reset_use_tab_cookie_param_value -%>;
		
		if ((window.location.hash == null || window.location.hash == "") && useCookie == true) {
			var t = argsObj.tabber;
	    var i;
	
			/* Optional: Add the id of the tabber to the cookie name to allow
				 for multiple tabber interfaces on the site.  If you have
				 multiple tabber interfaces (even on different pages) I suggest
				 setting a unique id on each one, to avoid having the cookie set
				 the wrong tab. */
			/*if (t.id) {
				t.cookie = t.id + t.cookie;
			}*/
			
			/* If a cookie was previously set, restore the active tab */
			i = parseInt(getCookie(t.cookie));
			if (isNaN(i)) {
				return;
			}
			t.tabShow(i);
			
			// Set anchor
			var tabDomId = t.tabs[i].div.id;
			setTabAnchor(tabDomId);
		}
  },

  'onClick':function(argsObj)
  {
    // Set cookie
		var c = argsObj.tabber.cookie;
    var i = argsObj.index;
    setCookie(c, i);
		
		// Set anchor
		var tabDomId = argsObj.tabber.tabs[argsObj.index].div.id;
		setTabAnchor(tabDomId);
  }
};

/*==================================================
  Tab Anchor functions
  ==================================================*/
function setTabAnchor(tabDomId) {
	if (tabDomId && tabDomId != "") {
		window.location.hash = "#" + tabDomId.substr(4);
	} else {
		window.location.hash = "";
	}
}
	
/*==================================================
  Cookie functions
  ==================================================*/
function setCookie(name, value, expires, path, domain, secure) {
    document.cookie= name + "=" + escape(value) +
        ((expires) ? "; expires=" + expires.toGMTString() : "") +
        ((path) ? "; path=" + path : "") +
        ((domain) ? "; domain=" + domain : "") +
        ((secure) ? "; secure" : "");
}

function getCookie(name) {
    var dc = document.cookie;
    var prefix = name + "=";
    var begin = dc.indexOf("; " + prefix);
    if (begin == -1) {
        begin = dc.indexOf(prefix);
        if (begin != 0) return null;
    } else {
        begin += 2;
    }
    var end = document.cookie.indexOf(";", begin);
    if (end == -1) {
        end = dc.length;
    }
    return unescape(dc.substring(begin + prefix.length, end));
}
function deleteCookie(name, path, domain) {
    if (getCookie(name)) {
        document.cookie = name + "=" +
            ((path) ? "; path=" + path : "") +
            ((domain) ? "; domain=" + domain : "") +
            "; expires=Thu, 01-Jan-70 00:00:01 GMT";
    }
}

</script>


<%#
	# The following code handles the anchor hash in the URL and does one of two things:
 	# 1. either shows the correct tab by matching the anchor to the element with id: "tab-{anchor}", or
 	# 2. searches for the element the anchor is referring and tries to figure out what tab it's in and makes that tab active.
 	#    Note: the element with the anchor MUST have an ID set to the same value as the anchor hash for this to work.
%>

<script type="text/javascript">
	addLoadEvent(function() {
		if (window.location.hash && window.location.hash.match( /^#/ )) 
		{ 
			var hash_value = window.location.hash.substr(1);
			var tab_el = document.getElementById("tab-" + hash_value);
			var anchor_el = null;
			var anchor_el_id = null;
			 
			if (tab_el == null) {
				/* It wasn't a tab so we need to find the anchor it refers to and scroll to it. */
				
				anchor_el = $(hash_value);
				
				if (anchor_el) {
					anchor_el_parents = anchor_el.ancestors();
				
					found = false;
				
					for(i = 0; i < anchor_el_parents.length && !found; i++) {
						if (anchor_el_parents[i].hasClassName('tabbertab')) {
				  			tab_el = anchor_el_parents[i];
						}
					}
				}
			}
			
			/* Now set the class accordingly on the tab elements, to show the tab. */
			if (tab_el) { 
				tab_el.className = "tabbertab tabbertabdefault";
			}
		}
	});
</script>


<%= javascript_include_tag "tabber" %>
